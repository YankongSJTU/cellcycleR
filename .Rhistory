###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="LOWESS"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="Wavelet"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
phi_genes <- seq(1, 2*pi, length.out=G);
phi_genes
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, 2*pi, length.out=G);
sigma_genes <- rchisq(G, 4);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
celltime_levels <- 128;
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,1], type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="B-spline"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data[,2],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,2],type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),6], type="l")
plot(cycle_data[,6],type="l")
plot(cycle_data_reorder[order(out$cell_times),6], type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="Wavelet"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),6], type="l")
plot(cycle_data[,6],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 100, num_iter=100))
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),70], type="l")
plot(cycle_data[,70],type="l")
plot(cycle_data_reorder[order(out$cell_times),70], type="l")
plot(cycle_data[,70],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="Wavelet"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 4);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
celltime_levels <- 128;
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,1], type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="B-spline"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 4);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
celltime_levels <- 128;
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,60], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,1], type="l")
plot(cycle_data[,30], type="l")
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 1);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,30], type="l")
celltime_levels <- 128;
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,60], type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="B-spline"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 100, num_iter=100))
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="Wavelet"))
###### Post processing
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 100, num_iter=100))
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install_github("rstudio/packrat")
library(packrat)
packrat::snapshot()
packrat::init()
devtools::document()
packrat::init()
library(MASS)
devtools::document()
packrat::init()
packrat::packify()
library(cellcycleR)
library(cellcycleR)
celltime_levels <- 128
log(celltime_levels)%% log(2) ==0
celltime_levels <- 127
log(celltime_levels)%% log(2) ==0
rm(list=ls())
install_github('kkdey/cellcycleR')
library(devtools)
install_github('kkdey/cellcycleR')
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 1);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,30], type="l")
celltime_levels <- 128;
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,60], type="l")
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=100, method="B-spline"))
rm(kist=ls())
rm(list=ls())
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 1);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,30], type="l")
celltime_levels <- 128;
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,60], type="l")
###  B-spline smoothing
system.time(out <- np_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=300, method="B-spline"))
plot(sigma_genes, out$sigma, col="red",xlab="true sigma", ylab="est sigma", main="sigma(variation) est, comparison")
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 100, num_iter=300))
library(plotrix)
library(RColorBrewer)
radial.plot(lengths=1:length(out$cell_times),radial.pos=out$cell_times[order(cell_times_reorder)],
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(out$cell_times)), lwd=2)
radial.plot(lengths=1:length(cell_times_reorder),radial.pos=sort(cell_times_reorder),
line.col=colorRampPalette(brewer.pal(9,"Blues"))(length(cell_times_reorder)), lwd=2)
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data[,1],type="l")
plot(cycle_data_reorder[order(out$cell_times),7], type="l")
plot(cycle_data[,7],type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data[,60],type="l")
plot(cycle_data_reorder[order(out$cell_times),80], type="l")
plot(cycle_data[,80],type="l")
plot(cycle_data[,1], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,30], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,1], type="l")
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,1], type="l")
plot(cycle_data_reorder[,60], type="l")
plot(cycle_data_reorder[,30], type="l")
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=300))
plot(cycle_data_reorder[order(out$cell_times),1], type="l")
plot(cycle_data_reorder[order(out$cell_times),60], type="l")
plot(cycle_data_reorder[order(out$cell_times),30], type="l")
system.time(smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(order(out$cell_times), cycle_data_reorder[order(out$cell_times),g])
out <- sum((cycle_data[g,] - mu.est.true$y)^2)
return(out)
})))
g <- 1
mu.est.true <- smooth.spline(order(out$cell_times), cycle_data_reorder[order(out$cell_times),g])
system.time(smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(order(out$cell_times), cycle_data_reorder[order(out$cell_times),g])
out <- sum((cycle_data_reorder[order(out$cell_times),g] - mu.est.true$y)^2)
return(out)
})))
smash_disp_true
G
mu.est.true <- smooth.spline(order(out$cell_times), cycle_data_reorder[order(out$cell_times),g])
plot(mu.est.true)
plot(cycle_data_reorder[order(out$cell_times),g])
plot(cycle_data_reorder[order(out$cell_times),1])
plot(cycle_data_reorder[order(out$cell_times),1],type="l")
plot(mu.est.true)
plot(mu.est.true,type="l")
plot(cycle_data_reorder[order(out$cell_times),1],type="l")
g <- 20
mu.est.true <- smooth.spline(order(out$cell_times), cycle_data_reorder[order(out$cell_times),g])
plot(mu.est.true,type="l")
plot(cycle_data_reorder[order(out$cell_times),g],type="l")
system.time(smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(out$cell_times[order(out$cell_times)], cycle_data_reorder[order(out$cell_times),g])
out <- sum((cycle_data_reorder[order(out$cell_times),g] - mu.est.true$y)^2)
return(out)
})))
out$cell_times[order(out$cell_times)]
mu.est.true <- smooth.spline(out$cell_times[order(out$cell_times)], cycle_data_reorder[order(out$cell_times),g])
plot(mu.est.true)
plot(mu.est.true,type="l")
out <- sum((cycle_data_reorder[order(out$cell_times),g] - mu.est.true$y)^2)
mu.est.true$y
unique(out$cell_times[order(out$cell_times)])
out$cell_times[order(out$cell_times)]
out$cell_times[order(out$cell_times)]
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=300))
g <- 1
mu.est.true <- smooth.spline(out$cell_times[order(out$cell_times)], cycle_data_reorder[order(out$cell_times),g])
mu.est.true
plot(mu.est.true$y)
plot(mu.est.true$y, type="l")
plot(cycle_data_reorder[order(out$cell_times),g], type="l")
system.time(smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(out$cell_times[order(out$cell_times)], cycle_data_reorder[order(out$cell_times),g])
disp <- sum((cycle_data_reorder[order(out$cell_times),g] - mu.est.true$y)^2)
return(disp)
})))
warnings()
disp <- sum((cycle_data_reorder[order(out$cell_times),g] - mu.est.true$y)^2)
g
mu.est.true$y
unique(out$cell_times[order(out$cell_times)])
ordered_vec <- as.numeric(tapply(cycle_data[order(out$cell_times),g], factor(sort(out$cell_times)), mean));
ordered_vec
plot(ordered_vec)
ordered_vec <- as.numeric(tapply(cycle_data_reorder[order(out$cell_times),g], factor(sort(out$cell_times)), mean));
plot(ordered_vec)
disp <- sum((ordered_vec - mu.est.true$y)^2)
disp
system.time(smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(out$cell_times[order(out$cell_times)], cycle_data_reorder[order(out$cell_times),g])
ordered_vec <- as.numeric(tapply(cycle_data_reorder[order(out$cell_times),g], factor(sort(out$cell_times)), mean));
disp <- sum((ordered_vec - mu.est.true$y)^2)
return(disp)
})))
smash_disp_true
unique(cell_times_sim)
unique(cell_times_sim)
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 1);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
unique(cell_times_sim)
library(cellcycleR)
library(wavethresh)
G <- 100;
num_cells <- 256;
phi_genes <- seq(1, pi, length.out=G);
sigma_genes <- rchisq(G, 1);
cell_times_sim <- sort(sample(seq(0,2*pi, 2*pi/(num_cells-1)), num_cells, replace=FALSE));
cycle_data <- matrix(0,num_cells,G)
for(s in 1:num_cells){
cycle_data[s,] <- 10*cell_times_sim[s] + 30*sin(2*cell_times_sim[s] + phi_genes) + rnorm(G,0,sigma_genes);
}
plot(cycle_data[,1], type="l")
plot(cycle_data[,60], type="l")
plot(cycle_data[,30], type="l")
sample_reorder <- sample(1:num_cells,num_cells, replace=FALSE);
cell_times_reorder <- cell_times_sim[sample_reorder];
cycle_data_reorder <- cycle_data[sample_reorder,];
plot(cycle_data_reorder[,1], type="l")
plot(cycle_data_reorder[,60], type="l")
plot(cycle_data_reorder[,30], type="l")
system.time(out <- sin_cell_ordering_class(cycle_data_reorder, celltime_levels = 128, num_iter=300))
plot(cycle_data_reorder[order(out$cell_times),1], type="l");
plot(cycle_data_reorder[order(out$cell_times),60], type="l");
plot(cycle_data_reorder[order(out$cell_times),30], type="l");
system.time(smash_disp_est <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(cell_times_sim, cycle_data)
ordered_vec <- as.numeric(tapply(cycle_data_reorder[order(out$cell_times),g], factor(sort(out$cell_times)), mean));
disp <- sum((ordered_vec - mu.est.true$y)^2)
return(disp)
})))
print(smash_disp_est)
system.time(smash_disp_est <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(sort(out$cell_times), cycle_data_reorder[order(out$cell_times),g]);
ordered_vec <- as.numeric(tapply(cycle_data_reorder[order(out$cell_times),g], factor(sort(out$cell_times)), mean));
disp <- sum((ordered_vec - mu.est.true$y)^2)
return(disp)
})))
print(smash_disp_est)
system.time(smash_disp_true <- mean(sapply(1:G, function(g)
{
mu.est.true <- smooth.spline(cell_times_sim, cycle_data[,g])
out <- sum((cycle_data[,g] - mu.est.true$y)^2)
return(out)
})))
print(smash_disp_true)
smash_disp_est*256/length(unique(out$cell_times))
